# Define an upstream for your web application
# This uses Docker's internal DNS to find the 'web' service
upstream flask_app {
    server web:5000;
}

# Server block to redirect all HTTP traffic to HTTPS
server {
    listen 80;
    server_name ctf.cyberpanther-dev.space;

    # Redirect to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# Main server block for handling HTTPS traffic
server {
    listen 443 ssl http2;
    server_name ctf.cyberpanther-dev.space;

    # --- SSL Configuration ---
    # Point to the certificates you mounted from Cloudflare
    ssl_certificate /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/key.key;

    # --- Security & Performance Tweaks ---
    # Use modern TLS protocols
    ssl_protocols TLSv1.2 TLSv1.3;
    # Prefer modern ciphers
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;

    # --- Proxy Configuration ---
    location / {
        # Pass requests to the 'flask_app' upstream
        proxy_pass http://flask_app;

        # Set headers to pass correct info to your Flask app
        # This is important for Flask to know it's behind a proxy
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}